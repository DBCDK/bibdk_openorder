<?php

class BibdkOpenOrderWebTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => t('OpenOrder webservice'),
      'description' => t('Test webservice methods'),
      'group' => t('Bibliotek.dk - OpenOrder'),
    );

  }

  public function setUp() {
    module_enable(array('bibdk_openorder_webservice_mockup'));
    menu_rebuild();
    parent::setUp(array('bibdk_openorder', 'bibdk_openorder_webservice_mockup'));
    variable_set('bibdk_openorder_url', $this->getAbsoluteUrl('bibdk_openorder_webservice'));
    variable_set('bibdk_openorder_xsd_url', $this->getAbsoluteUrl('bibdk_openorder_webservice/openorder_xsd'));
  }

  public function tearDown() {
    parent::tearDown();
    module_disable(array('bibdk_openorder_webservice_mockup'));
  }

  public function testIncrementRedirectStatTrue() {
    module_load_include('module', 'bibdk_openorder', 'bibdk_openorder');

    // The Stats have been updated
    $result = bibdk_openorder_do_incrementRedirectStat('1111');
    $this->verbose($result);
    $this->assertTrue($result, 'Valid number have been updated');

    // The stats have not been updated
    $result = bibdk_openorder_do_incrementRedirectStat(NULL);
    $this->assertFalse($result, 'Invalid number have not been updated');

    // log have been added to watchdog
    $query = db_select('watchdog', 'w')
      ->fields('w', array('message'))
      ->orderBy('wid', 'desc')
      ->range(0, 1);
    $result = $query->execute();
    $record = $result->fetchAssoc();
    $this->assertEqual($record['message'], 'Could not register incrementRedirectStat for agency : @agencyID', 'Log have been added to watchdog');

  }

}
